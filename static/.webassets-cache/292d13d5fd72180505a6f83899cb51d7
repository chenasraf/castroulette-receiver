Vvar APP_ID, castReveivers, initializeCastApi, namespace, onError, onInitSuccess, receiveListener, receiverMessage, session, sessionListener;\u000a\u000acastReveivers = {};\u000a\u000asession = void 0;\u000a\u000aAPP_ID = '6684D5DF';\u000a\u000anamespace = 'urn:x-cast:chrome.cast';\u000a\u000awindow.__onGCastApiAvailable = function(loaded, errorInfo) {\u000a  console.debug('__onGCastApiAvailable');\u000a  if (loaded) {\u000a    console.debug('initializing cast api');\u000a    return initializeCastApi();\u000a  } else {\u000a    return console.error(errorInfo);\u000a  }\u000a};\u000a\u000ainitializeCastApi = function() {\u000a  var apiConfig, sessionRequest;\u000a  sessionRequest = new chrome.cast.SessionRequest(APP_ID);\u000a  apiConfig = new chrome.cast.ApiConfig(sessionRequest, sessionListener, receiveListener);\u000a  return chrome.cast.initialize(apiConfig, onInitSuccess, onError);\u000a};\u000a\u000aonInitSuccess = console.debug;\u000a\u000aonError = console.error;\u000a\u000asessionListener = function(e) {\u000a  console.debug("New session ID: " + e.sessionId);\u000a  session = e;\u000a  session.addUpdateListener(sessionUpdateListener);\u000a  return session.addMessageListener(namespace, receiverMessage);\u000a};\u000a\u000areceiverMessage = console.debug;\u000a\u000areceiveListener = console.debug;\u000a
p1
.