V/** @define {string} Application ID used when running the sender. */\u000avar APP_ID, gameManagerClient, onSessionReady_, sendSpritedemoMessage;\u000a\u000aAPP_ID = 'D6120C32';\u000a\u000agameManagerClient = null;\u000a\u000a\u000a/**\u000a * Request a cast session when Cast Sender API loads.\u000a * @param {boolean} loaded\u000a * @param {Object} errorInfo\u000a */\u000a\u000awindow['__onGCastApiAvailable'] = function(loaded, errorInfo) {\u000a  if (!loaded) {\u000a    console.error('### Cast Sender SDK failed to load:');\u000a    console.dir(errorInfo);\u000a    return;\u000a  }\u000a  cast.games.common.sender.setup(APP_ID, onSessionReady_);\u000a};\u000a\u000a\u000a/**\u000a * Callback when a cast session is ready. Connects the game manager.\u000a * @param {!chrome.cast.Session} session\u000a * @private\u000a */\u000a\u000aonSessionReady_ = function(session) {\u000a  console.log('### Creating game manager client.');\u000a  chrome.cast.games.GameManagerClient.getInstanceFor(session, (function(result) {\u000a    console.log('### Game manager client initialized!');\u000a    gameManagerClient = result.gameManagerClient;\u000a    console.log('### Sending AVAILABLE message.');\u000a    gameManagerClient.sendPlayerAvailableRequest(null, null, null);\u000a    help();\u000a  }), function(error) {\u000a    console.error('### Error initializing the game manager client: ' + error.errorDescription + ' ' + 'Error code: ' + error.errorCode);\u000a  });\u000a};\u000a\u000a\u000a/**\u000a * Sends a sprite message to the receiver. The receiver will add a sprite to the\u000a * screen when received.\u000a * @export\u000a */\u000a\u000asendSpritedemoMessage = function() {\u000a  var message;\u000a  if (!gameManagerClient) {\u000a    return;\u000a  }\u000a  message = new cast.games.spritedemo.SpritedemoMessage;\u000a  message.type = cast.games.spritedemo.SpritedemoMessageType.SPRITE;\u000a  gameManagerClient.sendGameMessage(message);\u000a};\u000a\u000acommandDocs.add('sendSpritedemoMessage() - This function creates a new ' + 'cast.games.spritedemo.SpritedemoMessage(), which is a container created ' + 'specifically for the needs of this cast application. It then ' + ' sends the message to the receiver using the ' + ' sendGameMessageWithPlayerId function in GameManagerClient.');\u000a
p1
.